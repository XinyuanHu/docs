{
  "openapi": "3.0.0",
  "info": {
    "title": "Flagler Health API",
    "version": "2024.01.05",
    "description": "Spine Into January",
    "license": {
      "name": "Proprietary",
      "url": "https://flaglerhealth.io"
    },
    "contact": {
      "name": "Flagler Health",
      "url": "https://flaglerhealth.io",
      "email": "eng@flaglerhealth.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "security": [
    {
      "flaglerJWT": []
    }
  ],
  "paths": {
    "/user/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User profile",
        "description": "Get User profile",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user/list/all": {
      "get": {
        "tags": [
          "user",
          "list"
        ],
        "summary": "List all users (internal only)",
        "description": "List all users",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user/search": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Search for users",
        "description": "Search for users",
        "requestBody": {
          "description": "Search criteria for users",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a user",
        "description": "Update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ObjectID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user/sendinvite/{id}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send email invite to a user",
        "description": "Send email invite to user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ObjectID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Send email invite to user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEmailInvite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user/passwordreset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send email password reset to a user",
        "description": "Send email password reset a to user",
        "requestBody": {
          "description": "Send email password reset a to user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user/updatepassword": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update user's password",
        "description": "Update user's password",
        "requestBody": {
          "description": "Update user's password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user/list/updateuserpassword": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update a user's password as a Flagler admin",
        "description": "Update a user's password as a Flagler admin",
        "requestBody": {
          "description": "Update a user's password as a Flagler admin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordAdmin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserNew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's name.",
            "example": "TestUser Flagler"
          },
          "email": {
            "type": "string",
            "description": "The user's email.",
            "example": "dev+testuser@flaglerhealth.io"
          },
          "password": {
            "type": "string",
            "description": "password",
            "example": "supersecretpassword"
          },
          "roleName": {
            "type": "string",
            "description": "valid role name. \"Admin\" for customers. One of [\"FlaglerETL\", \"RetoolAPI\"] for internal."
          },
          "expiresIn": {
            "type": "number",
            "description": "expiration in ms. Default 300000",
            "default": 300000
          },
          "flaglerType": {
            "type": "string",
            "description": "type of the user. One of \"customer\" (default), \"flagler\", or \"test\"."
          }
        },
        "required": [
          "roleName",
          "email",
          "password"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "description": "company objectid",
            "example": "Admin"
          },
          "roleName": {
            "type": "string",
            "description": "Valid user role name. Do not send role object with permissions array",
            "example": "Admin"
          },
          "expiresIn": {
            "type": "number",
            "description": "expiration in ms. Default 300000",
            "default": 300000
          }
        }
      },
      "UserProfile": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The user ID.",
                "example": "abcde123"
              }
            }
          }
        ]
      },
      "UserEmailInvite": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Valid user password. Required since we don't store user passwords in plaintext",
            "example": "abc123"
          }
        }
      },
      "UserPasswordResetRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Valid user email",
            "example": "abc123@gmail.com"
          }
        }
      },
      "UpdatePassword": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Valid reset token",
            "example": "abc123"
          },
          "userId": {
            "type": "string",
            "description": "Valid user id",
            "example": "abc123"
          },
          "password": {
            "type": "string",
            "description": "New password",
            "example": "abc123"
          }
        }
      },
      "UpdatePasswordAdmin": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Valid user id",
            "example": "abc123"
          },
          "password": {
            "type": "string",
            "description": "New password",
            "example": "abc123"
          }
        }
      },
      "UserSearch": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Company ObjectId"
              },
              "userIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "ObjectIds to match; overrides _id"
                }
              },
              "companyId": {
                "description": "Company ObjectId to filter by If not given or empty, then returns all companies.",
                "type": "string"
              },
              "name": {
                "description": "value to search for in the name (search strategy by case insensitive regex)",
                "type": "string"
              },
              "email": {
                "description": "value to search for in the email field (search strategy by case insensitive regex)",
                "type": "string"
              },
              "roleNames": {
                "description": "value to search for in the roleNames",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "value to search for in the roleNames. If not given or empty, then returns all roles.",
                  "enum": [
                    "Admin",
                    "Provider"
                  ]
                }
              },
              "flaglerType": {
                "type": "string",
                "description": "type of the user. One of \"customer\" (default), \"flagler\", or \"test\".",
                "enum": [
                  "customer",
                  "flagler",
                  "test"
                ]
              }
            }
          },
          "includeCompany": {
            "description": "whether to include Company model associated in the result",
            "type": "boolean",
            "example": true
          },
          "page": {
            "description": "page number",
            "type": "integer",
            "default": 1
          },
          "limit": {
            "description": "limit per page number",
            "type": "integer",
            "default": 10
          },
          "sort": {
            "description": "sort order of the columns. If not provided, sorts asc for User ObjectId.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "column name to sort",
                  "type": "string"
                },
                "order": {
                  "description": "1 for ascending. -1 for descending",
                  "type": "integer"
                }
              }
            },
            "example": [
              {
                "name": "name",
                "order": 1
              },
              {
                "name": "prettyName",
                "order": 1
              }
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "user",
      "description": "user operations"
    },
    {
      "name": "list",
      "description": "list operations (internal only)"
    }
  ]
}